<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.erp.dao.DealerMapper" >
  <resultMap id="BaseResultMap" type="com.erp.pojo.Dealer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="REAL" />
    <result column="level_id" property="levelId" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="saleman" property="saleman" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="logistics" property="logistics" jdbcType="VARCHAR" />
    <result column="monetary" property="monetary" jdbcType="REAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, address, amount, level_id, phone, saleman, state, logistics, monetary
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.erp.pojo.DealerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dealer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dealer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dealer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.erp.pojo.DealerExample" >
    delete from dealer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.erp.pojo.Dealer" >
    insert into dealer (id, name, address, 
      amount, level_id, phone, 
      saleman, state, logistics, 
      monetary)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{amount,jdbcType=REAL}, #{levelId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, 
      #{saleman,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{logistics,jdbcType=VARCHAR}, 
      #{monetary,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.erp.pojo.Dealer" >
    insert into dealer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="levelId != null" >
        level_id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="saleman != null" >
        saleman,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="logistics != null" >
        logistics,
      </if>
      <if test="monetary != null" >
        monetary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=REAL},
      </if>
      <if test="levelId != null" >
        #{levelId,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="saleman != null" >
        #{saleman,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="logistics != null" >
        #{logistics,jdbcType=VARCHAR},
      </if>
      <if test="monetary != null" >
        #{monetary,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.erp.pojo.DealerExample" resultType="java.lang.Integer" >
    select count(*) from dealer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update dealer
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=REAL},
      </if>
      <if test="record.levelId != null" >
        level_id = #{record.levelId,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.saleman != null" >
        saleman = #{record.saleman,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.logistics != null" >
        logistics = #{record.logistics,jdbcType=VARCHAR},
      </if>
      <if test="record.monetary != null" >
        monetary = #{record.monetary,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update dealer
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=REAL},
      level_id = #{record.levelId,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      saleman = #{record.saleman,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      logistics = #{record.logistics,jdbcType=VARCHAR},
      monetary = #{record.monetary,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.erp.pojo.Dealer" >
    update dealer
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=REAL},
      </if>
      <if test="levelId != null" >
        level_id = #{levelId,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="saleman != null" >
        saleman = #{saleman,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="logistics != null" >
        logistics = #{logistics,jdbcType=VARCHAR},
      </if>
      <if test="monetary != null" >
        monetary = #{monetary,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.erp.pojo.Dealer" >
    update dealer
    set name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=REAL},
      level_id = #{levelId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      saleman = #{saleman,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      logistics = #{logistics,jdbcType=VARCHAR},
      monetary = #{monetary,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>