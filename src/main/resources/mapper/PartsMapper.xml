<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.erp.dao.PartsMapper" >
  <resultMap id="BaseResultMap" type="com.erp.pojo.Parts" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="spec" property="spec" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="valuation_method" property="valuationMethod" jdbcType="VARCHAR" />
    <result column="supplier" property="supplier" jdbcType="VARCHAR" />
    <result column="warning" property="warning" jdbcType="REAL" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, type, spec, num, code, price, valuation_method, supplier, warning, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.erp.pojo.PartsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from parts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from parts
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from parts
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.erp.pojo.PartsExample" >
    delete from parts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.erp.pojo.Parts" >
    insert into parts (id, name, type, 
      spec, num, code, price, 
      valuation_method, supplier, warning, 
      state)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{spec,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, 
      #{valuationMethod,jdbcType=VARCHAR}, #{supplier,jdbcType=VARCHAR}, #{warning,jdbcType=REAL}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.erp.pojo.Parts" >
    insert into parts
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="spec != null" >
        spec,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="valuationMethod != null" >
        valuation_method,
      </if>
      <if test="supplier != null" >
        supplier,
      </if>
      <if test="warning != null" >
        warning,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="spec != null" >
        #{spec,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="valuationMethod != null" >
        #{valuationMethod,jdbcType=VARCHAR},
      </if>
      <if test="supplier != null" >
        #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="warning != null" >
        #{warning,jdbcType=REAL},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.erp.pojo.PartsExample" resultType="java.lang.Integer" >
    select count(*) from parts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update parts
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.spec != null" >
        spec = #{record.spec,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.valuationMethod != null" >
        valuation_method = #{record.valuationMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.supplier != null" >
        supplier = #{record.supplier,jdbcType=VARCHAR},
      </if>
      <if test="record.warning != null" >
        warning = #{record.warning,jdbcType=REAL},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update parts
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      spec = #{record.spec,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      valuation_method = #{record.valuationMethod,jdbcType=VARCHAR},
      supplier = #{record.supplier,jdbcType=VARCHAR},
      warning = #{record.warning,jdbcType=REAL},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.erp.pojo.Parts" >
    update parts
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="spec != null" >
        spec = #{spec,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="valuationMethod != null" >
        valuation_method = #{valuationMethod,jdbcType=VARCHAR},
      </if>
      <if test="supplier != null" >
        supplier = #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="warning != null" >
        warning = #{warning,jdbcType=REAL},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.erp.pojo.Parts" >
    update parts
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      spec = #{spec,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      valuation_method = #{valuationMethod,jdbcType=VARCHAR},
      supplier = #{supplier,jdbcType=VARCHAR},
      warning = #{warning,jdbcType=REAL},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>